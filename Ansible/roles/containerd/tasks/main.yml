- name: Download and install containerd
  block:
    - name: Download containerd
      get_url:
        url: "{{ containerd_url }}"
        dest: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        mode: '0755'

    - name: Extract containerd
      unarchive:
        src: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        dest: /usr/local
        remote_src: yes

    - name: Clean up containerd archive
      file:
        path: /tmp/containerd-{{ containerd_version }}-linux-amd64.tar.gz
        state: absent

- name: Create containerd config
  block:
    - name: Create config directory
      file:
        path: /etc/containerd
        state: directory
        mode: '0755'

    - name: Generate default config
      command: containerd config default
      register: containerd_config
      changed_when: false

    - name: Save config to file
      copy:
        content: "{{ containerd_config.stdout }}"
        dest: /etc/containerd/config.toml
        mode: '0644'

- name: Setup containerd service
  block:
    - name: Download containerd service file
      get_url:
        url: "{{ containerd_service_url }}" 
        dest: "{{ containerd_service_path }}"
        mode: '0644'

    - name: Reload systemd
      systemd:
        daemon_reload: yes

- name: Install runc
  block:
    - name: Download runc
      get_url:
        url: "{{ runc_url }}"
        dest: /tmp/runc.amd64
        mode: '0755'

    - name: Install runc binary
      command: install -m 755 /tmp/runc.amd64 /usr/local/sbin/runc
      args:
        creates: /usr/local/sbin/runc

    - name: Clean up runc
      file:
        path: /tmp/runc.amd64
        state: absent

- name: Install CNI plugins
  block:
    - name: Download CNI plugins
      get_url:
        url: "{{ cni_plugins_url }}"
        dest: /tmp/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz
        mode: '0755'

    - name: Create CNI bin directory
      file:
        path: /opt/cni/bin
        state: directory
        mode: '0755'

    - name: Extract CNI plugins
      unarchive:
        src: /tmp/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz
        dest: /opt/cni/bin
        remote_src: yes

    - name: Clean up CNI archive
      file:
        path: /tmp/cni-plugins-linux-amd64-v{{ cni_plugins_version }}.tgz
        state: absent

- name: Configure crictl
  copy:
    dest: "{{ crictl_config_path }}"
    content: |
      runtime-endpoint: unix:///var/run/containerd/containerd.sock
    mode: '0644'

- name: Enable and start containerd
  systemd:
    name: containerd
    state: started
    enabled: yes

- name: Enable systemd cgroup driver
  replace:
    path: "{{ containerd_config_path }}"
    regexp: 'SystemdCgroup *= *false'
    replace: 'SystemdCgroup = true'
    backup: yes
  notify: Restart containerd
