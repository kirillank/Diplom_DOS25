- name: Create keyrings directory
  file:
    path: "{{ kubernetes_keyring_dir }}"
    state: directory
    mode: '0755'

- name: Add Kubernetes GPG key 
  get_url:
    url: https://pkgs.k8s.io/core:/stable:/{{ kubernetes_version }}/deb/Release.key
    dest: "{{ kubernetes_release_key_path }}"
    mode: '0644'

- name: Convert GPG key to keyring
  command: >
    gpg --dearmor -o {{ kubernetes_keyring_path }} {{ kubernetes_release_key_path }}
  args:
    creates: "{{ kubernetes_keyring_path }}"

- name: Set permissions for keyring
  file:
    path: "{{ kubernetes_keyring_path }}"
    mode: '0644'

- name: Add Kubernetes apt repository
  copy:
    dest: "{{ kubernetes_sources_list_path }}" 
    content: |
      deb [signed-by={{ kubernetes_keyring_path }}] {{ kubernetes_repo_url }} /
    mode: '0644'

- name: Update apt cache
  apt:
    update_cache: yes

- name: Install kubeadm, kubelet, kubectl
  apt:
    name:
      - kubeadm
      - kubelet
      - kubectl
    state: present
    update_cache: yes
    lock_timeout: 300
  register: kube_pkgs
  until: kube_pkgs is succeeded
  retries: 5   
  delay: 60

- name: Hold kube packages
  command: apt-mark hold {{ item }}
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Download kubeseal archive to control node
  delegate_to: localhost
  run_once: true
  get_url:
    url: "https://github.com/bitnami-labs/sealed-secrets/releases/download/v{{ kubeseal_version }}/kubeseal-{{ kubeseal_version }}-linux-amd64.tar.gz"
    dest: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    mode: "0644"
    timeout: 60
  register: kubeseal_dl
  until: kubeseal_dl is succeeded
  retries: 5
  delay: 15

- name: Distribute kubeseal archive to nodes
  copy:
    src: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    dest: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    mode: "0644"

- name: Extract kubeseal on control node
  delegate_to: localhost
  run_once: true
  unarchive:
    src: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes            
    mode: "0755"
    creates: "/usr/local/bin/kubeseal"

- name: Extract kubeseal binary
  become: yes
  unarchive:
    src: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    dest: "/usr/local/bin"
    remote_src: yes        
    creates: "/usr/local/bin/kubeseal"
    mode: "0755"

- name: Remove kubeseal archive from nodes
  file:
    path: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    state: absent

- name: Remove kubeseal archive from control node
  delegate_to: localhost
  run_once: true
  file:
    path: "/tmp/kubeseal-{{ kubeseal_version }}.tar.gz"
    state: absent

- name: Download Helm install script
  get_url:
    url: "{{ helm_install_script_url }}"
    dest: "{{ helm_install_script_path }}"
    mode: '0755'

- name: Install Helm
  command: "{{ helm_install_script_path }}"
  args:
    creates: /usr/local/bin/helm

- name: Remove Helm install script
  file:
    path: "{{ helm_install_script_path }}"
    state: absent

