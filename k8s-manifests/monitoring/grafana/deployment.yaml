apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      nodeSelector:
        role: monitoring
      containers:
        - name: grafana
          image: GRAFANA_IMAGE
          ports:
            - containerPort: 3000
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: GRAFANA_USERNAME
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-secret
                  key: GRAFANA_PASSWORD
            - name: GF_PATHS_PROVISIONING
              value: /etc/grafana/provisioning
          volumeMounts:
            - name: datasource
              mountPath: /etc/grafana/provisioning/datasources
            - name: dashboards
              mountPath: /etc/grafana/provisioning/dashboards
            - name: dashboards-nodes
              mountPath: /var/lib/grafana/dashboards/nodes
            - name: dashboards-apps
              mountPath: /var/lib/grafana/dashboards/apps
            - name: storage
              mountPath: /var/lib/grafana
      volumes:
        - name: datasource
          configMap:
            name: grafana-datasource
        - name: dashboards
          configMap:
            name: grafana-dashboard-config
        - name: dashboards-nodes
          configMap:
            name: grafana-dashboards-nodes
        - name: dashboards-apps
          configMap:
            name: grafana-dashboards-apps
        - name: storage
          emptyDir: {}
        - name: secret
          secret:
            secretName: grafana-secret

